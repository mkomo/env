#!/bin/bash
#
# hist v1.0.0
# Copyright (c) 2014 Matt Komorowski
# Distributed under the MIT Licence
#
# hist provides a more robust command line history for bash.
#


HIST_HOME="$HOME"
HIST_FILENAME=".bash_eternal_history"
HIST_FILE="$HIST_HOME/$HIST_FILENAME"

ALL_HIST_DIR="/nfshome/$LOGNAME/history"

PAGER="cat"
TAILER="tail -50"
CURRENT_SHELL="cat"
GREPPER="grep --color=always"

while getopts "brf:g:Aacn:li" OPTION
do
	case $OPTION in
		b)
			UNIQUE_HOST_NAME=$HOSTNAME
			if which rpm && rpm --quiet -q basesystem
			then
				HOST_TIME=`rpm -q --queryformat '%{installtime}' basesystem`
				HOST_DATE=`date -d @$HOST_TIME +%Y.%m.%d.%H%M`
				UNIQUE_HOST_NAME="$UNIQUE_HOST_NAME-$HOST_DATE"
			fi
			UNIQUE_HOST_NAME="$UNIQUE_HOST_NAME-`hostid`"
			echo "saving backup to $ALL_HIST_DIR/$UNIQUE_HOST_NAME"
			cp $HIST_FILE $ALL_HIST_DIR/$UNIQUE_HOST_NAME
			exit 0
			;;
		r)
			echo '
hist_entry=$(history 1)		    # grab the most recent command
hist_entry="${hist_entry# *[0-9]*  }"	 # strip off the history line number
timestamp="${hist_entry:0:19}"
command="${hist_entry:20}"
shell_id=`printf "%5d\n" $$ | sed "s/ /0/g"`
if [ "${command%% *}" == "cd" ]  # if its a cd command, we want the directory from which we changed
then
	dir=$OLDPWD
else
	dir=$PWD
fi

hist_line="$timestamp	$EXITSTATUS	$dir	$command"
if [ -n "${LAST_HISTORY_ENTRY+x}" ] && [ "$hist_line" != "$LAST_HISTORY_ENTRY" ]; then
	echo "$shell_id	$hist_line" >> ~/.bash_eternal_history;
fi;
export LAST_HISTORY_ENTRY="$hist_line"'
			exit 0
			;;
		f)
			HIST_FILE="$OPTARG"
			;;
		g)
			GREP="$OPTARG"
			;;
		A)
			ALL_MACHINES=1
			PAGER="cat"
			;;
		a)
			TAILER="cat"
			;;
		c)
			CURRENT_SHELL="egrep ^[0]*$PPID"
			;;
		n)
			TAILER="tail -n $OPTARG"
            ;;
		l)
			PAGER="less -R"
            ;;
		i)
			GREPPER="$GREPPER -i"
	esac
done

if [ -n "$ALL_MACHINES" ]
then
	hist -b
	cd $ALL_HIST_DIR
	if [ -z "$GREP" ]
	then
		GREP_COLORS="mt=" $GREPPER --with-filename "" * | $TAILER | $PAGER
	else
		$GREPPER --with-filename "$GREP" * | $TAILER | $PAGER
	fi
else
	if [ -z "$GREP" ]
	then
		cat $HIST_FILE | $CURRENT_SHELL | $GREPPER "" | $TAILER | $PAGER
	else
		cat $HIST_FILE | $CURRENT_SHELL | $GREPPER "$GREP" | $TAILER | $PAGER
	fi
fi
exit $?
